PROJECT(ROSSNET C)
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

OPTION(WITH_ALL		"Link all modules"	ON)
OPTION(WITH_IP		"IP Module" 	   	OFF)
OPTION(WITH_TCP 	"TCP Module" 		OFF)
OPTION(WITH_EPI 	"EPI Module" 		OFF)
OPTION(WITH_OSPF	"OSPF Module" 		OFF)
OPTION(WITH_BGP		"BGP Module"		OFF)
OPTION(WITH_FTP		"FTP Module"		OFF)
OPTION(WITH_PHOLD	"PHOLD Module"		OFF)
OPTION(WITH_MULTICAST	"Multicast Module"	OFF)
OPTION(WITH_TLM		"TLM Module"		OFF)
OPTION(WITH_RANDOM_WALK "Random walk module"	OFF)

#SET(QUEUE	calendar) #Calendar Queue
#SET(QUEUE	heap) #Push/Down Heap
SET(QUEUE	splay) #Splay Tree
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DROSS_QUEUE_${QUEUE}")

#SET(MAPPING	  none)
SET(MAPPING	  linear)
#SET(MAPPING	  rrobin)
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DROSS_MAPPING_${MAPPING}")

SET(RAND	   clcg4)
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DROSS_RAND_${RAND}")

SET(MEMORY	  MEMORY)
#SET(MEMORY	  none)
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DROSS_MEMORY")

SET(NETWORK	  mpi)
#SET(NETWORK	  tcp)
#SET(NETWORK	  none)
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DROSS_NETWORK_${NETWORK}")

#SET(THREAD	  pthread)
SET(THREAD	  none)
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DROSS_THREAD_${THREAD}")

SET(CLOCK	  none)
#SET(CLOCK	  amd64)
#SET(CLOCK	  i386)
#SET(CLOCK	  ppc)
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DROSS_CLOCK_${CLOCK}")

SET(GVT		  mpi_allreduce)
#SET(GVT		  7oclock)
#SET(GVT		  none)
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DROSS_GVT_${GVT}")

IF(WITH_ALL)
	SET(WITH_IP ON)
	SET(WITH_TCP ON)
	SET(WITH_EPI ON)
	SET(WITH_OSPF ON)
	SET(WITH_BGP ON)
	SET(WITH_FTP ON)
	SET(WITH_PHOLD ON)
	SET(WITH_MULTICAST ON)
	SET(WITH_TLM ON)
	SET(WITH_RANDOM_WALK ON)
ENDIF(WITH_ALL)

IF(WITH_IP)
	INCLUDE_DIRECTORIES(${ROSSNET_SOURCE_DIR}/modules/network/ip)
ENDIF(WITH_IP)

IF(WITH_TCP)
	INCLUDE_DIRECTORIES(${ROSSNET_SOURCE_DIR}/modules/transport/tcp)
ENDIF(WITH_TCP)

IF(WITH_EPI)
	INCLUDE_DIRECTORIES(${ROSSNET_SOURCE_DIR}/modules/application/epi)
ENDIF(WITH_EPI)

IF(WITH_OSPF)
	INCLUDE_DIRECTORIES(${ROSSNET_SOURCE_DIR}/modules/network/ospfv2)
ENDIF(WITH_OSPF)

IF(WITH_BGP)
	INCLUDE_DIRECTORIES(${ROSSNET_SOURCE_DIR}/modules/network/bgp4)
ENDIF(WITH_BGP)

IF(WITH_FTP)
	INCLUDE_DIRECTORIES(${ROSSNET_SOURCE_DIR}/modules/application/ftp)
ENDIF(WITH_FTP)

IF(WITH_PHOLD)
	INCLUDE_DIRECTORIES(${ROSSNET_SOURCE_DIR}/modules/application/phold)
ENDIF(WITH_PHOLD)

IF(WITH_MULTICAST)
	INCLUDE_DIRECTORIES(${ROSSNET_SOURCE_DIR}/modules/network/multicast)
ENDIF(WITH_MULTICAST)

IF(WITH_TLM)
	INCLUDE_DIRECTORIES(${ROSSNET_SOURCE_DIR}/modules/physical/tlm)
ENDIF(WITH_TLM)

IF(WITH_RANDOM_WALK)
	INCLUDE_DIRECTORIES(${ROSSNET_SOURCE_DIR}/modules/mobility/random-walk)
ENDIF(WITH_RANDOM_WALK)

FIND_PACKAGE(LibXml2 REQUIRED)

INCLUDE_DIRECTORIES(${LIBXML2_INCLUDE_DIR})

#FIND_PACKAGE(MPI REQUIRED)

#INCLUDE_DIRECTORIES(${MPI_INCLUDE_DIR})

ADD_SUBDIRECTORY(modules)
ADD_SUBDIRECTORY(rossnet)
